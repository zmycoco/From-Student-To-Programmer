import java.util.HashMap;
iImport java.util.Map;

/**
 * 扩展单例模式，控制实际产生实例数目为3个
 * @author zhoumingyao
 *
 */
public class ThreeSingleton {
private final static String DEFAULT_PREKEY = "cache";//为后面使用的key定义一个前缀
private static Map<String,ThreeSingleton> map = new HashMap<String,ThreeSingleton>();//定义缓存实例的容器
private static int number = 1;//定义初始化实例数目为1
private final static int NUM_MAX = 3;

privateThreeSingleton(){
	
    }

public static synchronized ThreeSingletongetInstance(){
	//通过缓存理念及方式控制数量
	String key = DEFAULT_PREKEY + number;
	ThreeSingletonthreeSingleton = map.get(key);
	if(threeSingleton==null){
		threeSingleton = new ThreeSingleton();
		map.put(key, threeSingleton);
	}
	number++;//实例数目加1
	if(number>NUM_MAX){
		number=1;
	}
	returnthreeSingleton;
    }

public static void main(String args[]){
	ThreeSingleton t1 = getInstance();
	ThreeSingleton t2 = getInstance();
	ThreeSingleton t3 = getInstance();
	ThreeSingleton t4 = getInstance();
	ThreeSingleton t5 = getInstance();
	ThreeSingleton t6 = getInstance();
	System.out.println(t1.toString());
	System.out.println(t2.toString());
	System.out.println(t3.toString());
	System.out.println(t4.toString());
	System.out.println(t5.toString());
	System.out.println(t6.toString());
    }
}