import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;

importjavax.swing.JApplet;


public class NoBufferMovingCircle extends JApplet implements Runnable{
    Image screenImage = null;
    Thread thread;
int x = 5;
int move = 1;

public void init(){
	screenImage = createImage(230,160);
    }

public void start(){
	if(thread == null){
		thread = new Thread(this);
		thread.start();
	}
    }

	@Override
	public void run() {
		// TODO Auto-generated method stub
		try{
			System.out.println(x);
			while(true){
				x+=move;
				System.out.println(x);
				if((x>105)||(x<5)){
					move*=-1;
				}
				repaint();
				Thread.sleep(10);
			}
		}catch(Exception e){
			
		}
	}
	
	public void drawCircle(Graphics gc){
		Graphics2D g = (Graphics2D) gc;
		g.setColor(Color.GREEN);
		g.fillRect(0, 0, 200, 100);
		g.setColor(Color.red);
		g.fillOval(x, 5, 90, 90);
	}
	
	public void paint(Graphics g){
		g.setColor(Color.white);
		g.fillRect(0, 0, 200, 100);
		drawCircle(g);
	}

}

清单2：
import java.awt.Color;
import java.awt.Graphics;


public class BufferMovingCircle extends NoBufferMovingCircle{
     Graphics doubleBuffer = null;//缓冲区

public void init(){
	super.init();
	doubleBuffer = screenImage.getGraphics();
     }

     public void paint(Graphics g){//使用缓冲区，优化原有的paint方法
	doubleBuffer.setColor(Color.white);//先在内存中画图
	doubleBuffer.fillRect(0, 0, 200, 100);
	drawCircle(doubleBuffer);
	g.drawImage(screenImage, 0, 0, this);
     }
}

3.	清单3.示例代码
importjava.io.BufferedInputStream;
importjava.io.BufferedOutputStream;
importjava.io.DataInputStream;
importjava.io.DataOutputStream;
importjava.io.FileInputStream;
importjava.io.FileNotFoundException;
importjava.io.FileOutputStream;
importjava.io.IOException;


public class StreamVSBuffer {
public static void streamMethod() throws IOException{
	try {
			long start = System.currentTimeMillis();
		DataOutputStream dos = new DataOutputStream(new FileOutputStream("C:\\StreamVSBuffertest.txt"));//请替换成自己的文件
			for(inti=0;i<10000;i++){
				dos.writeBytes(String.valueOf(i)+"\r\n");//循环1万次写入数据
			}
			dos.close();
			DataInputStream dis = new DataInputStream(new FileInputStream("C:\\StreamVSBuffertest.txt"));
			while(dis.readLine() != null){
		
			}
			dis.close();
		System.out.println(System.currentTimeMillis() - start);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
     }

public static void bufferMethod() throws IOException{
	try {
			long start = System.currentTimeMillis();
		DataOutputStream dos = new DataOutputStream(new BufferedOutputStream(new FileOutputStream("C:\\StreamVSBuffertest.txt")));//请替换成自己的文件
			for(inti=0;i<10000;i++){
				dos.writeBytes(String.valueOf(i)+"\r\n");//循环1万次写入数据
			}
			dos.close();
			DataInputStream dis = new DataInputStream(new BufferedInputStream(new FileInputStream("C:\\StreamVSBuffertest.txt")));
			while(dis.readLine() != null){
		
			}
			dis.close();
		System.out.println(System.currentTimeMillis() - start);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
     }

public static void main(String[] args){
	try {
			StreamVSBuffer.streamMethod();
			StreamVSBuffer.bufferMethod();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
     }
}
