范例程序一：
class Node
{
int data;
int np;
String names;
Node next;
public Node(intdata,Stringnames,int np)
{
this.np=np;
this.names=names;
this.data=data;
this.next=null;
}
}
public class LinkedList
{
private Node first;
private Node last;
public BooleanisEmpty()
{
return first=null;
}
public void print()
{
Node current=first;
while(current!=null)
{
System.out.println(“[+current.data+””+current.names+””+current.np+”]”);
current=current.next;
}
System.out.ptintln();
}
public void insert(intdata,Stringnames,int np)
{
Node newNode=new Node(data,names,np);
If(this.isEmpty())
{
first=newNode;
last=newNode;
}
else
{
last.next=newNode;
last=newNode;
}
}
}


//================Program Description================
//程序名称:
//程序目的：建立5个学生成绩的单向链表，并访问每一个节点来打印成绩
//=================================================
import java.io*;
public class CH01_01
{
Public static void main(String args[])throws IOException
{
BufferedReaderbuf;
buf=new BufferedReader(new InputStreamReader(System.in));
intnum;
String name;
int score;
System.out.println(“请输入5个学生数据:  ”);
LinkedList list=new LinkedList();
for(inti=1;i<6;i++)
{
System.out.print(“请输入学号:  ”);
num=Integer.parseInt(buf.readLine());
System.out.print(“请输入姓名:  ”);
name=buf.readLine();
System.out.print(“请输入成绩:  ”);
score=Integer.parseInt(buf.readLine( ));
list.insert(num,name,score);
System.out.println(“-------------“);
}
System.out.println(“学生成绩”);
System.out.println(“学号姓名成绩=======”);
list.print( )；
}
}

范例程序2：
class Node
{
int data;
int np;
String names;
Node next;
public Node(intdata,Stringnames,int np)
{
this.np=np;
this.names=names;
this.data=data;
this.next=null;
}
public class StuLinkedList
{ 
public Node first;
public Node last;
public booleanisEmpty()
{
return first==null;
}
public void print()
{
Node current=first;
while(current!=null)
{
System.out.println(“[“+current.data+”“+current.names+”“+current.np+”]”);
current=current.next
}
System.out.println();
}
public void insert(intdata,Stringnames,int np)
{
Node newNode=new Node(data,names,np);
if(this.isEmpty())
{
first=newNode;
last=newNode;
}
else
{
Last.next=newNode;
last=newNode;
}
}
public void delete(Node delNode)
{
Node newNode;
Node tmp;
if(first.data==delNode.data)
{first=first.next;
}
else if(last.data==delNode.data)
{
System.out.println(“I am here\n”);
newNode=first;
while(newNode.next!=last)  newNode=newNode.next;
newNode=newNode.next;
last=newNode;
}
else
{
newNode=first;
tmp=first;
while(newNode.data!=delNode.data)
{
tmp=newNode;
newNode=newNode.next;
}
tmp.next=delNode.next;
}
}
}

//================Program Description================
//程序名称:
//程序目的：利用链表来建立、删除和打印学生成绩
//=================================================
importjava.util.*;
import java.io.*;
public classCH03_02
{
public static void main(String args[])throws IOException
{
BufferedReaderbuf;
Random rand= new Random();
buf=new BufferedReader (new InputStreamReader(System.in));
StuLinkedList list =new StuLinkedList();
intI,j,findword=0,data[ ][ ]=new int[12][10];
String name[ ]=new String[]
{“Allen”,”Scott”,”Marry”,”Jon”,”Mark”,”Ricky”,”Lisa”,”Jasica”,”Hanson”,”Amy”,”Bob”,”Jack”};
Systm.out.println(“学号成绩学号成绩学号成绩学号成绩\n”);
for(i=0;i<12;i++)
{
data[i][0]=i+1;
data[i][1]=(Math.abs(rand.nextInt(50)))+50;
list.insert(data[i][0],name[i],data[i][1]);
}
for(i=0;i<3;i++)
{
for(j=0;j<4;j++)
System.out.println(“[“+data[j*3+i][0]+”]]”+data[j*3+i][1]+”);
System.out.println();
}
while (true)
{
System.out.println(“输入要删除成绩的学号，结束输入-1：”);
findword=Integer.parseInt(buf.readLine());
if(findword==-1)
break;
else
{
Node current=new
Node(list.first.data,list.first.names,list.first.np);
current.next=list.first.next;
while(current.data!=findword)
current=current.next;
list.delete(current);
}
System.out.println(“删除后成绩列表，请注意！要删除的成绩其学号必须在此列表中\n”);
List.print();
}
}
}

范例程序3：
class Node
{
int data;
int np;
String names;
Node next;

public Node (intdata,Stringnames,int np)
{
this.np=np;
this.names=names;
this.data=data;
this.next=null;
}
}
public class StuLinkedList
{
public Node first;
public Node last;
public booleanisEmpty()
{
return first=null;
}
public void print()
{
Node current=first;
while(current!=null)
{
System.out.println(“[“+current.data+”“+current.names+”“+current.np+”]”);
current=current.next;
}
System.out.println();
}
public void insert(intdata,Stringnames,int np)
{
Node newNode=new Node(data,names,np);
if(this.isEmpty())
{
first=newNode;
last=newNode;
}
else
{
last.next=newNode;
last=newNode;
}
}
public void delete(Node delNode)
{
Node newNode;
Node tmp;
if(first.data==delNode.data)
(
first=first.next;
}
else if(last.data==delNode.data)
{
System.out.printkn(“I am here\n”);
newNode=first;

while(newNode.next!=last)  newNode=newNode.next;
newNode.next=last.next;
last=newNode;
}
Else
{
newNode=first;
tmp=first;
while(newNode.data!=delNode.data)
{
tmp=newNode;
newNode=newNode.next;
}
tmp.next=delNode.next;
}
}
}

//=========================Program Description====================
//程序名称：
//程序目的：将CH03_02.java中的学生成绩将学号反转打印出来

importjava.util.*;
import java.io*;

class ReverseStuLinkedList extends StuLinkedList
{
public void reverse_print()
{
Node current=first;
Node before=null;
System.out.println(“反转后的列表数据: “);
while(current!=null)
{
last=before;
before=current;
current=current.next;
before.next=last;
}
current=before;
while(current!=null)
{
System.out.println(“[“+current.data+”“+current.names+”“+current.np+”]”);
current=current.next;
}
System.out.println();
}
}

public class CH03_03
{
public static void main(string args[ ] throws IOException{
Random rand=new Random();
ReverseStuLinkedList list=new ReverseStuLinkedList();
inti,j,data[ ][ ]=new String[ ]
{“Allen”,”Scott”,”Marry”,”Jon”,”Mark”,”Ricky”,”Lisa”,”Jasica”,”Hanson”,”Amy”,”Bob”,”Jack”};
Systm.out.println(“学号成绩学号成绩学号成绩学号成绩\n”);
for(i<0;i<12;i++)
{
data[i][0]=i+1;
data[i][1]=(Math.abs(rand.nextInt(50)))+50;
list.insert(data[i][0],name[i],data[i][1]);
}
for(i=0;i<3;i++)
{
for(j=0;j<4;j++)
System.out.print(“[“+data[j*3+i][0]+”][“+data[j*3+i][1]+”]“);
System.out.println();
}
list.reverse_print();
}
}

范例程序4：
class Node
{
int data;
Node next;
public Node(int data)
{
this.data=data;
this.next=null;
}
}
public class LinkeList
{
public Node first;
public Node last;
public BooleanisEmpty()
{
return first==null;
}
public void print()
{
Node current=first;
while(current!=null)
{
System.out.print(“[“+current.data+”]”);
current=current.next;
}
System.out.println();
}
/*串联两个链表*/
public LinkedList Concatenate (LinkeList head1,LinkeList head2)
{
LinkeListptr;
ptr=head1;
while(ptr.last.next!=null)
ptr.last=ptr.last.next;
ptr.last.next=head2.first;
return head1;
}


//========================	Program Description======================
//程序名称：
//程序目的：多项式相加
//==================================================================

import  java.io.*;
class Node
{
int coed;
intexp;
Node next;
public Node(intcoef,intexp)
{
this.coef=coef;
this.exp=exp;
this.next=null;
}
}
class PolyLinkedList
{
public Node first;
public Node last;
public booleanisEmpty()
{
return first==null;
}
Public void create_link(intcoef,intexp)
{
Node newNode=new Node(coef,exp);
if(this.isEmpty())
{
first=newNode;
last=newNode;
}
else
{
last.next=newNode;
last=newNode;
}
}
public void print_link()
{
Node current=first;
while(current!=null)
{
if(current.exp==1 &&current.coef!=0) //X^1不显示指数
System.out.print(current.coef+”X + “);
else if(current.exp!=0 &&current.coef!= 0(
System.out.print(current.coef+”X^”+current.exp+ “ + “);
else if(current.coef!=0)  //X^0时不显示变量
System.out.print(current.coef);
current=current.next;
}
System.out.println();
}
public PolyLinkedListsum_link(PolyLinkedList b)
{
int sum[ ]=new int[10];
inti=-;maxnumber;
PolyLinkedListtempLinkedList=new PolyLinkedList();
PolyLinkedList a=new PolyLinkedList();
inttempexp[ ]=new int[10];
Node ptr;
a=this;
ptr=b.first;
while(a.first!=null)   //判断多项式1
{
b.first=ptr;              //重复比较A及B的指数
while(b.first!=null)
{
if(a.first.exp==b.first.exp)    //指数相等，系数相加
{
sum[i]=a.first.coef+b.first.coef;
tempexp[i]=a.first.exp;
a.first=a.first.next;
b.first=b.first.next;
i++;               
}
else if (b.first.exp>a.first.exp)   //B指数较大，指定系数给C
{
sum[i]=b.first.coef;
tempexp[i]=b.first.exp;
b.first=b.first.next;
i++;  
}
else if (a.first.exp>b.first.exp)   //A指数较大，指定系数给C
{
sum[i]=a.first.coef;
tempexp[i]=a.first.exp;
a.first=a.first.next;
i++;  
}
} // end of inner while loop
} //end of outer while loop
maxnumber=i-1;
for (int j=0;j<maxnumber+1;j++)
tempLinkedList.create_link(sum[j],maxnumber-j);
return temLinkedList;
} //end of sum_link
} //end of class PolyLinkedList

public class CH03_04
{
public static void main(String args[]) throws IOException
{
PolyLinkedList a=new PolyLinkedList();
PolyLinkedList b=new PolyLinkedList();
PolyLinkedList c=new PolyLinkedList();

int data1[ ]={8,54,7,0,1,3,0,4,2}  //多项式A的系数
int data2[ ]={-2,6,0,0,0,5,6,8,6,9}  //多项式B的系数
System.out.print(“原始多项式” \nA=”);

for(inti=0;i<data1.length;i++)
a.create_link(data1[i],data1.length-i-1); //建立多项式A，系数由3递减

for(inti=0;i<data2.length;i++)
b.create_link(data2[i],data2.length-i-1); //建立多项式B，系数由3递减

a.print_link();    //打印多项式A
system.out.print(“B=”);

b.print_link();    //打印多项式B
system.out.print(“多项式相加结果： \nC=”);
c=a.sum_link(b);            //C为A、B多项式相加结果
c.print_link()              //打印多项式C
}
}
